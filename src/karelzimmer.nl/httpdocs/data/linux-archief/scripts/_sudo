#!/bin/bash
# ##############################################################################
# Bestand:  _sudo
# Doel:     Wrapper voor het starten van een script met sudo in een
#           bureaubladbestand (aka starter, aka launcher, .desktop-bestand)
# Gebruik:  In een starter (aanbevolen)
#      of:  In het terminalvenster:
#           _sudo SCRIPT [OPTIE...] [--] [ARGUMENT...]
# Auteur:   Karel Zimmer (https://karelzimmer.nl, info@karelzimmer.nl)
# ------------------------------------------------------------------------------
# Auteursrecht Â© 2018-2019 Karel Zimmer.
#
# Dit programma is vrije software: u mag het herdistribueren en/of wijzigen
# onder de voorwaarden van de GNU Algemene Publieke Licentie zoals gepubliceerd
# door de Free Software Foundation, onder versie 3 van de Licentie of (naar uw
# keuze) elke latere versie.
#
# Dit programma is gedistribueerd in de hoop dat het nuttig zal zijn maar ZONDER
# ENIGE GARANTIE; zelfs zonder de impliciete garanties die GEBRUIKELIJK ZIJN IN
# DE HANDEL of voor BRUIKBAARHEID VOOR EEN SPECIFIEK DOEL.
# Zie de GNU Algemene Publieke Licentie voor meer details.
#
# U hoort een kopie van de GNU Algemene Publieke Licentie te hebben ontvangen
# samen met dit programma. Als dat niet het geval is, zie
# http://www.gnu.org/licenses/.
# ------------------------------------------------------------------------------
# Versie:   06.00.00    2019-08-22  Optie quiet verwijderd
# ##############################################################################
# VERSION_NUMBER=06.00.03
# RELEASE_DATE=2019-09-22

# ##############################################################################
# Instellingen
# ##############################################################################
PROGNAME=_sudo
if [[ $1 = '--usage' ]]; then
    # Aangeroepen door ivpsh.
    echo "Gebruik: $PROGNAME"
    exit 0
fi

# ------------------------------------------------------------------------------
# Globale constanten
# ------------------------------------------------------------------------------
PROGDIR=$(
    if [[ ${BASH_SOURCE[0]} ]]; then
        cd "$(dirname "${BASH_SOURCE[0]}")" && pwd
    else
        echo /usr/local/bin
    fi
    )
SCRIPT=$1
shift
TEXT1='Wachtwoord opgeven geannuleerd.'
TEXT2='Geen wachtwoord opgegeven.'
TEXT3='Ongeldig wachtwoord opgegeven of geen beheerder.'

SUCCESS=0
ERROR=1
WARNING=2

# ------------------------------------------------------------------------------
# Globale variabelen
# ------------------------------------------------------------------------------
# Array, integer
declare -i RC=0

# Boolean

# Tekst
PASSWORD=''

# ##############################################################################
# Functies
# ##############################################################################

# ##############################################################################
# Hoofdlijn
# ##############################################################################

while true; do
    if [[ $SCRIPT = "$PROGNAME" ]]; then
        RC=$SUCCESS
        break
    fi

    if [[ -z $SCRIPT ]]; then
        systemd-cat --identifier="$PROGNAME" --priority=err echo "Geen script \
opgegeven"
        RC=$ERROR
        break
    fi

    # Controleer of we een wachtwoord moeten vragen.
    if sudo --non-interactive --validate &> /dev/null; then
        # Geen wachtwoord vragen door "credential caching".
        sudo "$PROGDIR/$SCRIPT" "$@" --
        RC=$?
        break
    fi

    PASSWORD=$(
        zenity  --password          \
                --title="$SCRIPT"   \
                2> /dev/null
        )
    # shellcheck disable=SC2181
    if [[ $? -ne 0 ]]; then
        zenity  --warning       \
                --width=400     \
                --height=100    \
                --text="$TEXT1" \
                2> /dev/null    || true
        exit $SUCCESS
    fi

    if [[ -z $PASSWORD ]]; then
        zenity  --warning       \
                --width=400     \
                --height=100    \
                --text="$TEXT2" \
                2> /dev/null    || true
        continue
    elif echo "$PASSWORD" | sudo --stdin true 2> /dev/null; then
        sudo "$PROGDIR/$SCRIPT" "$@" --
        RC=$?
        break
    else
        zenity  --error         \
                --width=400     \
                --height=100    \
                --text="$TEXT3" \
                2> /dev/null    || true
    fi
done

case $RC in
    $SUCCESS)
        msg1="Opdracht $SCRIPT is uitgevoerd"
        msg2='De opdracht is succesvol uitgevoerd'
        notify-send --urgency=low       \
                    --icon=dialog-info  \
                    "$msg1" "$msg2"
        ;;
    $WARNING)
        msg1="Opdracht $SCRIPT is gestopt"
        msg2='De opdracht is met een waarschuwing gestopt'
        notify-send --urgency=normal        \
                    --icon=dialog-warning   \
                    "$msg1" "$msg2"
        ;;
    *)
        msg1="Opdracht $SCRIPT is afgebroken!"
        msg2='Zie log(rapport) voor meer informatie'
        notify-send --urgency=critical  \
                    --icon=dialog-error \
                    "$msg1" "$msg2"
        ;;
esac

# Einde script
