#!/bin/bash
# ###############################################################################
# Bestand:  getstarted
# Doel:     Schoon mappen en download bestanden
# Gebruik:  1. In het terminalvenster (aanbevolen):
#              wget karelzimmer.nl/s;bash s
#              (de s wordt aan de serverkant herleid naar getstarted en
#               gedownload als s, en script s (getstarted) wordt gestart)
#           2. In het terminalvenster:
#              getstarted
# Auteur:   Karel Zimmer (http://karelzimmer.nl, info@karelzimmer.nl)
# -------------------------------------------------------------------------------
# Auteursrecht © 2016-2019 Karel Zimmer.
#
# Dit programma is vrije software: u mag het herdistribueren en/of wijzigen onder
# de voorwaarden van de GNU Algemene Publieke Licentie zoals gepubliceerd door de
# Free Software Foundation, onder versie 3 van de Licentie of (naar uw keuze)
# elke latere versie.
#
# Dit programma is gedistribueerd in de hoop dat het nuttig zal zijn maar
# ZONDER ENIGE GARANTIE; zelfs zonder de impliciete garanties die
# GEBRUIKELIJK ZIJN IN DE HANDEL of voor BRUIKBAARHEID VOOR EEN SPECIFIEK DOEL.
# Zie de GNU Algemene Publieke Licentie voor meer details.
#
# U hoort een kopie van de GNU Algemene Publieke Licentie te hebben ontvangen
# samen met dit programma. Als dat niet het geval is, zie
# http://www.gnu.org/licenses/.
# -------------------------------------------------------------------------------
# Versies:  1.0.0   2016-06-05  Eerste versie. Vervangt getscripts en
#                               getchecklists
#           2.0.0   2016-06-16  Van MD5 naar SHA256
#           3.0.0   2017-03-20  Wijzig rechten in ~/bin (-w)
#           4.0.0   2017-06-06  Ook scripts.arch, scripts.dev, en uploads
#                               verwerken
#           5.0.0   2017-10-03  Verborgen optie man toegevoegd
#           6.0.0   2017-10-31  Verborgen optie no-download toegevoegd
#           7.0.0   2017-11-20  Script deploy comprimeert met xz en gzip
#           8.0.0   2017-12-20  Geen uploads meer te verwerken
#           9.0.0   2018-03-08  Niet meer sourcen en start-install starten
#          10.0.0   2018-03-19  Gebruik common.sh verwijderd
#          11.0.0   2018-07-28  Gebruik mappen volgens de Linux FHS standaard
#          12.0.0   2018-09-09  GUIfied met zenity
# ###############################################################################
# VERSION_NUMBER=11.4.8
# RELEASE_DATE=2018-11-24

# ###############################################################################
# Instellingen
# ###############################################################################
readonly PROGDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
readonly PROGNAME=$(basename "${BASH_SOURCE[0]}")
readonly ORIGINALNAME=getstarted
readonly REDIRECTNAME=s
if [[ $1 = '--ivptest' ]]; then
    exit 0
elif [[ $0 == *bash ]]; then
    if [[ $PROGNAME = "$REDIRECTNAME" ]]; then
        echo "'. $REDIRECTNAME' niet gebruiken; gebruik: bash $REDIRECTNAME" >&2
    else
        echo 'Niet uitvoeren met opdracht source.' >&2
    fi
    return 1
elif [[ $UID -eq 0 ]]; then
    echo "Niet uitvoeren met 'sudo' of als root." >&2
    exit 1
fi

# -------------------------------------------------------------------------------
# Algemene instellingen
# -------------------------------------------------------------------------------
# Trap aanzetten (script-hardening).
trap sluit_terminal SIGINT
trap sluit_terminal SIGTERM

# -------------------------------------------------------------------------------
# Globale constanten
# -------------------------------------------------------------------------------
readonly SCRIPTSHOME=/usr/local/bin
readonly CONFIGHOME=/usr/local/etc
readonly CONFIGFILE=deploy-files.lst
readonly DESKTOPHOME=/usr/share/applications
readonly ICONSHOME=/usr/share/pixmaps
readonly -a DEVMACHS=(
pc06
)
readonly -a DEVUSERS=(
karel
)
readonly HASH_PROGRAM=sha256sum
readonly LOGCMD="systemd-cat --identifier=$PROGNAME --priority=info"
readonly SOURCE=http://karelzimmer.nl/data/linux
# shellcheck source=../.config/user-dirs.dirs
if ! source ${XDG_CONFIG_HOME:-$HOME/.config}/user-dirs.dirs &> /dev/null
then
    if locale | grep --quiet --regexp='=nl'; then
        readonly XDG_DOCUMENTS_DIR=$HOME/Documenten
    elif locale | grep --quiet --regexp='=en'; then
        readonly XDG_DOCUMENTS_DIR=$HOME/Documents
    else
        echo "Localization (l10n) kan niet bepaald worden. Geprobeerd is 'nl' \
en 'en'." >&2
        exit 1
    fi
fi
readonly WAIT=1s
# -------------------------------------------------------------------------------
# Scripts (#1/1A)
readonly SCRIPTS_TARFILE=scripts.tar.xz
readonly SCRIPTS_HASHFILE=$SCRIPTS_TARFILE.$HASH_PROGRAM
readonly SCRIPTS_TARGETDIR=$SCRIPTSHOME
readonly SCRIPTS_TARGETDIR_ALT=$HOME/$(basename $SCRIPTS_TARFILE .tar.xz)
# Scriptsarchief (#2)
readonly SCRIPTS_ARCH_TARFILE=scripts.arch.tar.gz
readonly SCRIPTS_ARCH_HASHFILE=$SCRIPTS_ARCH_TARFILE.$HASH_PROGRAM
readonly SCRIPTS_ARCH_TARGETDIR=$HOME
readonly SCRIPTS_ARCH_TARFILE_BASENAME=\
$(basename $SCRIPTS_ARCH_TARFILE .tar.gz)
# Ontw-scripts (#3)
readonly SCRIPTS_DEV_TARFILE=scripts.dev.tar.xz
readonly SCRIPTS_DEV_HASHFILE=$SCRIPTS_DEV_TARFILE.$HASH_PROGRAM
readonly SCRIPTS_DEV_TARGETDIR=$HOME
readonly SCRIPTS_DEV_TARFILE_BASENAME=\
$(basename $SCRIPTS_DEV_TARFILE .tar.xz)
# Checklists (#4)
readonly CHECKLISTS_TARFILE=Checklists.tar.gz
readonly CHECKLISTS_HASHFILE=$CHECKLISTS_TARFILE.$HASH_PROGRAM
readonly CHECKLISTS_TARGETDIR=$XDG_DOCUMENTS_DIR
readonly CHECKLISTS_TARFILE_BASENAME=$(basename $CHECKLISTS_TARFILE .tar.gz)
# Website (#5)
readonly UPLOADS_TARFILE=uploads.tar
readonly UPLOADS_HASHFILE=$UPLOADS_TARFILE.$HASH_PROGRAM
readonly UPLOADS_TARGETDIR=$HOME
readonly UPLOADS_TARFILE_BASENAME=\
$(basename $UPLOADS_TARFILE .tar)
# -------------------------------------------------------------------------------

# Foutcodes
readonly E_OK=0
readonly E_ERROR=1

# -------------------------------------------------------------------------------
# Globale variabelen
# -------------------------------------------------------------------------------

# Array, integer

# Boolean
declare DEVMACH=false
declare DEVUSER=false

# Tekst
declare PROGDESC="$PROGNAME"

# ###############################################################################
# Functies
# ###############################################################################

# -------------------------------------------------------------------------------
# Initiële acties
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
init_script() {

    if [[ "$*" ]]; then
        set -o verbose
        set -o xtrace
    fi

    tput clear
    if [[ $PROGNAME = "$REDIRECTNAME" ]]; then
        PROGDESC="$ORIGINALNAME"
    fi

    if ! command -v zenity &> /dev/null; then
        echo
        echo 'Met Zenity worden dialoogvensters vanuit shellscript aangeroepen.'
        echo
        echo 'Zenity ontbreekt op deze computer en wordt nu geïnstalleerd...'
        sudo apt-get install zenity
    fi

    for devmach in "${DEVMACHS[@]}"; do
        if [[ $HOSTNAME = "$devmach" ]]; then
            DEVMACH=true
        fi
    done

    for devuser in "${DEVUSERS[@]}"; do
        if [[ $USER = "$devuser" ]]; then
            DEVUSER=true
        fi
    done
}

# -------------------------------------------------------------------------------
# Verwerk getclean (mappen schonen) en getscripts (scripts en overige bestanden
# downloaden)
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
verwerk() {

    local text0='Opdrachten worden verwerkt...'
    local text1='Opschonen...'
    local text2='Scripts downloaden...'

    vraag_wachtwoord "$@"
    (
    echo "#$text1"; sleep $WAIT
    verwerk_getclean
    echo "#$text2"; sleep $WAIT
    verwerk_getscripts
    ) |&
    zenity  --progress          \
            --pulsate           \
            --auto-close        \
            --no-cancel         \
            --width=600         \
            --height=50         \
            --title="$PROGDESC" \
            --text="$text0"     \
            2> /dev/null
}

#--------------------------------------------------------------------------------
# Vraag en controleer het [sudo] wachtwoord
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
vraag_wachtwoord() {

    local text1='Wachtwoord opgeven geannuleerd.'
    local text2='Geen wachtwoord opgegeven.'
    local text3='Ongeldig wachtwoord opgegeven of geen beheerder.'

    local password=''

    while true; do
        # Controleer of we een wachtwoord moeten vragen.
        if sudo --non-interactive --validate &> /dev/null; then
            # Geen wachtwoord vragen door "credential caching".
            break
        fi

        # Vraag wachtwoord.
        sudo --reset-timestamp
        password=$(
            zenity  --password          \
                    --title="$PROGDESC" \
                    2> /dev/null
            )
        # Gebruiker kiest annuleren.
        # shellcheck disable=2181
        if [[ $? -ne 0 ]]; then
            zenity  --warning       \
                    --width=300     \
                    --height=100    \
                    --text="$text1" \
                    2> /dev/null    || true
            sluit_terminal "$@"
        fi

        # Controleer het wachtwoord.
        if [[ -z $password ]]; then
            zenity  --warning       \
                    --width=300     \
                    --height=100    \
                    --text="$text2" \
                    2> /dev/null    || true
            continue
        elif echo "$password" | sudo --stdin true 2> /dev/null; then
            break
        else
            zenity  --error         \
                    --width=300     \
                    --height=100    \
                    --text="$text3" \
                    2> /dev/null    || true
            continue
        fi
    done
}

# -------------------------------------------------------------------------------
# Sluit het terminalvenster
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
sluit_terminal() {

    # Als er invoer voor dit script is opgegeven de PPID niet beëindigen.
    if [[ "$*" ]]; then
        echo "$PROGNAME: opties of argumenten opgegeven, terminalvenster niet \
sluiten"
        exit $E_OK
    else
        rm  --verbose                           \
            --force                             \
            "$PROGDIR/$REDIRECTNAME"            \
            "$PROGDIR/$REDIRECTNAME".{1..99}    |& $LOGCMD

        /bin/kill --signal=SIGKILL $PPID
    fi
}

# -------------------------------------------------------------------------------
# Schoon getstarted mappen
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
verwerk_getclean() {

    local desktopfile=''

    echo '#Opschonen...'

    # Verwijder bestanden en mappen, deel 1 van 2, overal.
    sudo rm --force             \
            --recursive         \
            /home/*/bin         \
            /home/*/.bin.data   |& $LOGCMD

    for desktopfile in $(sudo grep  --files-with-matches                \
                                    --regexp='# Auteur:.*Karel Zimmer'  \
                                    /home/*/.local/share/applications/* \
                                    2> /dev/null
                        ); do
        rm  --force         \
            "$desktopfile"  |& $LOGCMD
    done
    rm --force                  \
        --recursive             \
        "$HOME/A_naar_PC06"     \
                                |& $LOGCMD
    rm --force                  \
        --recursive             \
        "$XDG_DOWNLOAD_DIR/A_naar_*_van_*"  \
                                |& $LOGCMD
    rm --force                  \
        "$XDG_DOWNLOAD_DIR/A_naar_*_van_*".tar.xz \
                                |& $LOGCMD
    # Schoon de USB-stick.
    rm  --force                 \
        --recursive             \
        /media/"$USER/*/A_naar_*_van_*"     \
                                |& $LOGCMD
    rm  --force                 \
        /media/"$USER/*/A_naar_*_van_*".tar.xz  \
                                |& $LOGCMD
    if [[ -f $CONFIGHOME/$CONFIGFILE ]]; then
        while read -r file; do
            sudo rm --force \
                    "$file" |& $LOGCMD
        done < $CONFIGHOME/$CONFIGFILE
    fi
    sudo rm --force "$CONFIGHOME/$CONFIGFILE"

    # Verwijder bestanden en mappen, deel 2 van 2, als ontwikkelaar op een
    # niet-ontwikkelmachine.
    if "$DEVUSER" && ! "$DEVMACH"; then
        rm  --force                 \
            --recursive             \
            "$HOME"/A_naar_*_van_*  \
                                    |& $LOGCMD
        rm  --force                 \
            "$HOME"/A_naar_*_van_*.tar.xz   \
                                    |& $LOGCMD
        rm  --force                 \
            --recursive             \
            "$HOME"/Documenten/Checklists   \
                                    |& $LOGCMD
        rm  --force                 \
            "$HOME"/Documenten/*.pdf        \
                                    |& $LOGCMD
        rm  --force                 \
            --recursive             \
            "$HOME"/scripts.arch    |& $LOGCMD
        rm  --force                 \
            --recursive             \
            "$HOME"/scripts.dev     |& $LOGCMD
        rm  --force                 \
            --recursive             \
            "$HOME"/scripts         |& $LOGCMD
        rm  --force                 \
            --recursive             \
            "$HOME"/uploads         |& $LOGCMD

        # Maak mappen aan.
        for devmach in "${DEVMACHS[@]}"; do
            mkdir   --parents       \
                    "$HOME/A_naar_${devmach}_van_$HOSTNAME"/\
scripts/.icons                      \
                    "$HOME/A_naar_${devmach}_van_$HOSTNAME"/\
Documenten/Checklists               \
                    "$HOME/A_naar_${devmach}_van_$HOSTNAME"/\
uploads/site/html                   \
                                    |& $LOGCMD
        done

        # Verwijder extra digitaal werk.
        rm  --force                 \
            "$HOME"/ToDo            |& $LOGCMD
    fi
}

# -------------------------------------------------------------------------------
# Download scripts en overige bestanden
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
verwerk_getscripts() {

    verwerk_scripts             #1/#1A

    # Als ontwikkelaar op een niet-ontwikkelmachine meer verwerken.
    if "$DEVUSER" && ! "$DEVMACH"; then
        verwerk_scriptsarchief  #2
        verwerk_ontw_scripts    #3
        verwerk_checklists      #4
        verwerk_website         #5
    fi
}

#--------------------------------------------------------------------------------
# Download het archief, controleer en pak deze uit op de juiste plek, en
# kopieer de starters (#1/1A)
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
verwerk_scripts() {

    echo '#Scripts downloaden...'

    # Ga naar de doelmap.
    cd "$SCRIPTS_TARGETDIR" || exit $E_ERROR

    # Download het archief en het controlebestand.
    sudo wget   --output-document="$SCRIPTS_TARFILE"    \
                "$SOURCE/$SCRIPTS_TARFILE"              |& $LOGCMD
    sudo wget   --output-document="$SCRIPTS_HASHFILE"   \
                "$SOURCE/$SCRIPTS_HASHFILE"             |& $LOGCMD

    # Controleer het archief, en verwijder daarna het controlebestand.
    $HASH_PROGRAM   --check             \
                    --strict            \
                    "$SCRIPTS_HASHFILE" |& $LOGCMD
    sudo rm --verbose                   \
            "$SCRIPTS_HASHFILE"         |& $LOGCMD

    # Pak het archief uit, verwijder het archief, en zet eigenaarschap.
    sudo tar    --extract                   \
                --verbose                   \
                --file="$SCRIPTS_TARFILE"   |& $LOGCMD
    sudo rm     --verbose                   \
                "$SCRIPTS_TARFILE"          |& $LOGCMD
    sudo chown  --recursive                 \
                root:root                   \
                "$SCRIPTS_TARGETDIR"        |& $LOGCMD

    # Bestandenlijst plaatsen.
    sudo mv --verbose       \
            -- $CONFIGFILE  \
            "$CONFIGHOME"   |& $LOGCMD

    # Als ontwikkelaar op een niet-ontwikkelmachine ook ~/scripts vullen (#1A).
    if "$DEVUSER" && ! "$DEVMACH"; then
        mkdir   --verbose                       \
                --parents                       \
                "$SCRIPTS_TARGETDIR_ALT"        |& $LOGCMD

        # Kopieer alle bestanden.
        cp  --verbose                           \
            --preserve                          \
            --recursive                         \
            "$SCRIPTS_TARGETDIR"/*              \
            "$SCRIPTS_TARGETDIR"/.icons         \
            "$SCRIPTS_TARGETDIR_ALT"            |& $LOGCMD

        # Download extra digitaal werk.
        wget    --verbose                       \
                --output-document="$HOME"/ToDo  \
                "$SOURCE/ToDo"                  |& $LOGCMD || true
    fi

    # Icons plaatsen en verwijder de verborgen iconsmap.
    sudo mv --verbose       \
            -- .icons/*     \
            "$ICONSHOME"    |& $LOGCMD
    sudo rmdir  .icons      |& $LOGCMD

    # Starters plaatsen.
    sudo mv --verbose       \
            -- *.desktop    \
        "$DESKTOPHOME"     |& $LOGCMD
}

#--------------------------------------------------------------------------------
# Download het archief, controleer deze, en pak deze uit op de juiste plek (#2)
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
verwerk_scriptsarchief() {

    echo '#Scriptsarchief downloaden...'

    # Ga naar de doelmap.
    cd "$SCRIPTS_ARCH_TARGETDIR" || exit $E_ERROR

    # Download het archief en controlebestand.
    wget    --verbose                                   \
            --output-document="$SCRIPTS_ARCH_TARFILE"   \
            "$SOURCE/$SCRIPTS_ARCH_TARFILE"             |& $LOGCMD
    wget    --verbose                                   \
            --output-document="$SCRIPTS_ARCH_HASHFILE"  \
            "$SOURCE/$SCRIPTS_ARCH_HASHFILE"            |& $LOGCMD

    # Controleer het archief, en verwijder daarna het controlebestand.
    $HASH_PROGRAM   --check                     \
                    --strict                    \
                    "$SCRIPTS_ARCH_HASHFILE"    |& $LOGCMD
    rm  --verbose                               \
        "$SCRIPTS_ARCH_HASHFILE"                |& $LOGCMD

    # Pak het archief uit, en verwijder daarna het archief.
    tar --extract                       \
        --verbose                       \
        --file="$SCRIPTS_ARCH_TARFILE"  |& $LOGCMD
    rm  --verbose                       \
        "$SCRIPTS_ARCH_TARFILE"         |& $LOGCMD
}

#--------------------------------------------------------------------------------
# Download het archief, controleer deze, en pak deze uit op de juiste plek (#3)
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
verwerk_ontw_scripts() {

    echo '#Ontwikkelscripts downloaden...'

    # Ga naar de doelmap.
    cd "$SCRIPTS_DEV_TARGETDIR" || exit $E_ERROR

    # Download het archief en controlebestand.
    wget    --verbose                                   \
            --output-document="$SCRIPTS_DEV_TARFILE"    \
            "$SOURCE/$SCRIPTS_DEV_TARFILE"              |& $LOGCMD
    wget    --verbose                                   \
            --output-document="$SCRIPTS_DEV_HASHFILE"   \
            "$SOURCE/$SCRIPTS_DEV_HASHFILE"             |& $LOGCMD

    # Controleer het archief, en verwijder daarna het controlebestand.
    $HASH_PROGRAM   --check                 \
                    --strict                \
                    "$SCRIPTS_DEV_HASHFILE" |& $LOGCMD
    rm  --verbose                           \
        "$SCRIPTS_DEV_HASHFILE"             |& $LOGCMD

    # Pak het archief uit, en verwijder daarna het archief.
    tar --extract                       \
        --verbose                       \
        --file="$SCRIPTS_DEV_TARFILE"   |& $LOGCMD
    rm  --verbose                       \
        "$SCRIPTS_DEV_TARFILE"          |& $LOGCMD
}

#--------------------------------------------------------------------------------
# Download het archief, controleer deze, en pak deze uit op de juiste plek (#4)
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
verwerk_checklists() {

    echo '#Checklists downloaden...'

    # Ga naar de doelmap.
    cd "$CHECKLISTS_TARGETDIR" || exit $E_ERROR

    # Download het archief en controlebestand.
    wget    --verbose                                   \
            --output-document="$CHECKLISTS_TARFILE"     \
            "$SOURCE/$CHECKLISTS_TARFILE"               |& $LOGCMD
    wget    --verbose                                   \
            --output-document="$CHECKLISTS_HASHFILE"    \
            "$SOURCE/$CHECKLISTS_HASHFILE"              |& $LOGCMD

    # Controleer het archief, en verwijder daarna het controlebestand.
    $HASH_PROGRAM   --check                 \
                    --strict                \
                    "$CHECKLISTS_HASHFILE"  |& $LOGCMD
    rm  --verbose                           \
        "$CHECKLISTS_HASHFILE"              |& $LOGCMD

    # Pak het archief uit, en verwijder daarna het archief.
    tar --extract                       \
        --verbose                       \
        --file="$CHECKLISTS_TARFILE"    |& $LOGCMD
    rm  --verbose                       \
        "$CHECKLISTS_TARFILE"           |& $LOGCMD
}

#--------------------------------------------------------------------------------
# Download het archief, controleer deze, en pak deze uit op de juiste plek (#5)
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
verwerk_website() {

    echo '#Website downloaden...'

    # Ga naar de doelmap.
    cd "$UPLOADS_TARGETDIR" || exit $E_ERROR

    # Download het archief en controlebestand.
    wget    --verbose                               \
            --output-document="$UPLOADS_TARFILE"    \
            "$SOURCE/$UPLOADS_TARFILE"              |& $LOGCMD
    wget    --verbose                               \
            --output-document="$UPLOADS_HASHFILE"   \
            "$SOURCE/$UPLOADS_HASHFILE"             |& $LOGCMD

    # Controleer het archief, en verwijder daarna het controlebestand.
    $HASH_PROGRAM   --check             \
                    --strict            \
                    "$UPLOADS_HASHFILE" |& $LOGCMD
    rm  --verbose                       \
        "$UPLOADS_HASHFILE"             |& $LOGCMD

    # Pak het archief uit, en verwijder daarna het archief.
    tar --extract                   \
        --verbose                   \
        --file="$UPLOADS_TARFILE"   |& $LOGCMD
    rm  --verbose                   \
        "$UPLOADS_TARFILE"          |& $LOGCMD
}

# -------------------------------------------------------------------------------
# Afsluitende acties
# Globalen:
#   Geen
# Argumenten:
#   Geen
# -------------------------------------------------------------------------------
afsl_script() {

local text="Volg nu de stappen zoals beschreven in Checklist installatie.

Download en bekijk de checklist via een klik op Activiteiten (linksboven)
of druk kort op de Windows/Apple-toets, typ 'sta' en klik op Start Here
(of kies Start Here via menu Overig).

Kies 1 'Checklist installatie' op Menu Installatie.
Volg de aanwijzingen op het scherm en de stappen in de checklist.

N.B.
De checklist is ook te vinden op de site
http://karelzimmer.nl onder Linux."

    zenity  --info          \
            --width=550     \
            --height=150    \
            --text="$text"  \
            2> /dev/null    || true

    sluit_terminal "$@"
}

# ###############################################################################
# Hoofdlijn
# ###############################################################################

# init_script
{
    init_script "$@"
}

# verwerk
{
    verwerk "$@"
}

# afsl_script
{
    afsl_script "$@"
}

# Einde script
